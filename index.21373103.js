const e=document.querySelector("textarea");if(!e)throw new Error("Cannot find input element");const t=document.querySelector("button");if(!t)throw new Error("Cannot find button element");t.addEventListener("click",(()=>{!function(e){console.log(`input = "${e}"`);const t=e.replace(/[^\d\s]/g,"").replace(/\s+/g," ").trim().split(" ");if(console.log(`sampled codes = ${t.join(" ")}`),0==t.length)throw new Error("No combinations provided");const n=t[0].length;if(!t.every((e=>e.length==n)))throw new Error("Not all combinations have the same length");const o=[[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]];for(let e of t)for(let t=0;t<n;++t){const n=parseInt(e[t]);++o[t][n]}console.log("occurrences",o);const r=e=>{let t=0;for(let r=0;r<n;++r){const n=parseInt(e[r]);let c=0;for(let e=0;e<10;++e){const t=o[r][e],l=Math.min(n,e),s=Math.max(n,e);c+=Math.min(s-l,Math.abs(l-(s-10)))*t}t+=c}return{code:e,score:t}};let c=[...Array(Math.pow(10,n)).keys()].map((e=>e.toString().padStart(n,"0"))).filter((e=>!t.includes(e))).map((e=>r(e.toString())));c.sort(((e,t)=>e.score-t.score)),console.log("scored codes",c);const l=document.querySelector("table");if(!l)throw new Error("Cannot find table element");l.innerHTML="";const s=(e,t,n=!1)=>{const o=document.createElement("tr"),r=document.createElement(n?"th":"td");r.innerHTML=e,o.appendChild(r);const c=document.createElement(n?"th":"td");c.innerHTML=t,c.style.textAlign="right",o.appendChild(c),l.appendChild(o)};s("Combination","Score",!0),c.forEach((e=>{s(e.code,e.score.toString())}))}(e.value)}));
//# sourceMappingURL=index.21373103.js.map
